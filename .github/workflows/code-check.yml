name: Code Check

on: pull_request

jobs:
  install:
    name: Install requirements
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      #----------------------------------------------
      #                cache poetry
      #----------------------------------------------
      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: "~/.local"
          key: dotlocal-${{ runner.os }}-${{ hashFiles('.github/workflows/code-check.yml') }}
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      #----------------------------------------------
      #                cache venv
      #----------------------------------------------
      - name: Cache venv
        id: cache-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: "**/.venv"
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      #             install dependencies
      #----------------------------------------------
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
  code-check:
    name: Code checks
    runs-on: ubuntu-latest
    needs: install
    strategy:
      fail-fast: false
      matrix:
        check-type:
          ["flake8", "black", "isort", "bandit", "safety", "pydocstyle", "mypy"]
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      #----------------------------------------------
      #                cache poetry
      #----------------------------------------------
      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v2
        with:
          path: "~/.local"
          key: dotlocal-${{ runner.os }}-${{ hashFiles('.github/workflows/code-check.yml') }}
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: load-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: "**/.venv"
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.load-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      #              Run each pre-commit check
      #----------------------------------------------
      - name: Check ${{ matrix.check-type }}
        run: |
          poetry run pre-commit run ${{ matrix.check-type }} --all-files
